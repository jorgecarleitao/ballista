name: Rust

on: [push]

# Note, toolchain version must match the rustup version: either "nightly" or "nightly-YYYY-MM-DD"
# and must contain the toolchain for the OS at the end.

env:
  VCPKGRS_DYNAMIC: 1
  RUSTUP_VERSION: nightly-2020-05-14
  TOOLCHAIN_VERSION: nightly-2020-05-14-x86_64-pc-windows-msvc

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: rustup default ${RUSTUP_VERSION} && rustup component add clippy rustfmt
    - name: Lint Ballista
      run: cd rust && cargo clippy -- -D warnings
    - name: Lint Integration Tests
      run: cd integration-tests/rust && cargo clippy -- -D warnings
    - name: Lint Benchmarks
      run: cd benchmarks && cargo clippy -- -D warnings

  Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: rustup default ${RUSTUP_VERSION} && rustup component add rustfmt
    - name: Build Ballista
      run: cd rust && cargo build
    - name: Build Integration Tests
      run: cd integration-tests/rust && cargo build
    - name: Build Benchmarks
      run: cd benchmarks && cargo build
    - name: Run tests
      run: cd rust && cargo test

  Mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: |
        brew install rustup
        rustup default ${RUSTUP_VERSION} && rustup component add rustfmt
    - name: Build Ballista
      run: cd rust && cargo build
    - name: Build Integration Tests
      run: cd integration-tests/rust && cargo build
    - name: Build Benchmarks
      run: cd benchmarks && cargo build
    - name: Run tests
      run: cd rust && cargo test

  Windows:
    runs-on: windows-2016
    steps:
    - uses: actions/checkout@v2
    - name: Prepare the Windows Build Environment
      run: |
        vcpkg update
        vcpkg integrate install
        vcpkg install openssl:x64-windows
    - name: Setup Rust Nightly
      run: |
        rustup default nightly-2020-05-14
        rustup toolchain install nightly-2020-05-14 --no-self-update
        rustup component add rustfmt --toolchain nightly-2020-05-14-x86_64-pc-windows-msvc
    - name: Build Ballista
      run: |
        cd rust && cargo build
    - name: Build Integration Tests
      run: |
        cd integration-tests/rust && cargo build
    - name: Build Becnhmarks
      run: |
        cd benchmarks && cargo build
    - name: Run tests
      run: |
        cd rust && cargo test

  Docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build and push image to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        username: ${{ GITHUB_ACTOR }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ GITHUB_REPOSITORY }}/ballista-rust
        tag_with_ref: true
        dockerfile: docker/rust.dockerfile
        build_args: RELEASE_FLAG=
        cache_froms: ${{ GITHUB_REPOSITORY }}/ballista-rust:main
