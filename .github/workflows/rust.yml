name: Rust

on: [push]

# Note, toolchain version must match the rustup version: either "nightly" or "nightly-YYYY-MM-DD"
# and must contain the toolchain for the OS at the end.

env:
  VCPKGRS_DYNAMIC: 1
  RUSTUP_VERSION: nightly-2020-05-14
  TOOLCHAIN_VERSION: nightly-2020-05-14-x86_64-pc-windows-msvc

jobs:
  # this job uses ":main" as the image tag. This is mainly due to https://github.com/docker/build-push-action/issues/40
  Docker:
    runs-on: ubuntu-latest
    env:
      # this points to the repository that others fork from. Useful to fetch cached images from
      BASE_REPOSITORY: ${{ github.repository }}
      BUILDER_IMAGE_NAME: docker.pkg.github.com/${{ github.repository }}/ballista-rust-builder
      IMAGE_NAME: docker.pkg.github.com/${{ github.repository }}/ballista-rust
    steps:
    - uses: actions/checkout@v2
    # github does not provide a clean ref name. We build it here, see https://stackoverflow.com/a/58035262/931303
    - name: Extract git reference name
      shell: bash
      run: echo "##[set-output name=ref;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_ref
    # login to docker so that we can pull images from it.
    - name: Docker login
      run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    # try to fetch the latest builder image, so that we can re-use cached layers from it
    # it tries fetching it from the following places in order
    # - current fork, ref name
    # - base repo, main
    - name: Pull builder image
      run: > 
        docker pull "$BUILDER_IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}" ||
        docker pull "docker.pkg.github.com/$BASE_REPOSITORY/ballista-rust-builder:main" ||
        true
    - name: Build builder image
      run: >
        docker build -f docker/rust.dockerfile
        --cache-from $BUILDER_IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
        --cache-from docker.pkg.github.com/$BASE_REPOSITORY/ballista-rust-builder:main
        -t $BUILDER_IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
        --target builder
        .
    # build the builder image and push it so that it is available for caching
    - name: Push builder image
      run: docker push $BUILDER_IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
    - name: Build image
      run: >
        docker build -f docker/rust.dockerfile
        --cache-from $BUILDER_IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
        -t $IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
        .
    - name: Push image
      run: docker push $IMAGE_NAME:${{ steps.extract_ref.outputs.ref }}
